
alternateswitchglow.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000004a8  0000051c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000051c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000082  00000000  00000000  00000be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000c6a  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000c99  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000075f  00000000  00000000  00000ce1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000016c  00000000  00000000  00001440  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000032f  00000000  00000000  000015ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  000018dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000017e  00000000  00000000  00001970  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000471  00000000  00000000  00001aee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001f5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 c4 00 	call	0x188	; 0x188 <main>
  64:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z8disp_cmdj>:
	return 0;
}

void disp_cmd(unsigned int cmd)
{
	PORTC=((cmd & 0XF0)+0X04);
  6c:	9c 01       	movw	r18, r24
  6e:	20 7f       	andi	r18, 0xF0	; 240
  70:	33 27       	eor	r19, r19
  72:	2c 5f       	subi	r18, 0xFC	; 252
  74:	25 bb       	out	0x15, r18	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  76:	e9 ef       	ldi	r30, 0xF9	; 249
  78:	f0 e0       	ldi	r31, 0x00	; 0
  7a:	31 97       	sbiw	r30, 0x01	; 1
  7c:	f1 f7       	brne	.-4      	; 0x7a <_Z8disp_cmdj+0xe>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <_Z8disp_cmdj+0x14>
  80:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC - 0X04;
  82:	95 b3       	in	r25, 0x15	; 21
  84:	94 50       	subi	r25, 0x04	; 4
  86:	95 bb       	out	0x15, r25	; 21
	PORTC=(((cmd<<4)& 0XF0)+0X04);
  88:	82 95       	swap	r24
  8a:	80 7f       	andi	r24, 0xF0	; 240
  8c:	8c 5f       	subi	r24, 0xFC	; 252
  8e:	85 bb       	out	0x15, r24	; 21
  90:	89 ef       	ldi	r24, 0xF9	; 249
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	01 97       	sbiw	r24, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <_Z8disp_cmdj+0x28>
  98:	00 c0       	rjmp	.+0      	; 0x9a <_Z8disp_cmdj+0x2e>
  9a:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC-0X04;
  9c:	85 b3       	in	r24, 0x15	; 21
  9e:	84 50       	subi	r24, 0x04	; 4
  a0:	85 bb       	out	0x15, r24	; 21
  a2:	08 95       	ret

000000a4 <_Z9disp_datai>:
	
}
void disp_data( int cmd)
{
	PORTC=((cmd  & 0XF0)+0X05);
  a4:	9c 01       	movw	r18, r24
  a6:	20 7f       	andi	r18, 0xF0	; 240
  a8:	33 27       	eor	r19, r19
  aa:	2b 5f       	subi	r18, 0xFB	; 251
  ac:	25 bb       	out	0x15, r18	; 21
  ae:	e9 ef       	ldi	r30, 0xF9	; 249
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <_Z9disp_datai+0xe>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <_Z9disp_datai+0x14>
  b8:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC - 0X04;
  ba:	25 b3       	in	r18, 0x15	; 21
  bc:	24 50       	subi	r18, 0x04	; 4
  be:	25 bb       	out	0x15, r18	; 21
	PORTC=(((cmd <<4)& 0XF0)+0X05);
  c0:	82 95       	swap	r24
  c2:	92 95       	swap	r25
  c4:	90 7f       	andi	r25, 0xF0	; 240
  c6:	98 27       	eor	r25, r24
  c8:	80 7f       	andi	r24, 0xF0	; 240
  ca:	98 27       	eor	r25, r24
  cc:	8b 5f       	subi	r24, 0xFB	; 251
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	89 ef       	ldi	r24, 0xF9	; 249
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <_Z9disp_datai+0x30>
  d8:	00 c0       	rjmp	.+0      	; 0xda <_Z9disp_datai+0x36>
  da:	00 00       	nop
	_delay_ms(1);
	PORTC=PORTC-0X04;
  dc:	85 b3       	in	r24, 0x15	; 21
  de:	84 50       	subi	r24, 0x04	; 4
  e0:	85 bb       	out	0x15, r24	; 21
  e2:	08 95       	ret

000000e4 <_Z8disp_numj>:
		
	}
}

void disp_num(unsigned int num)
{
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	ec 01       	movw	r28, r24
	int a=0;
	if (num==0)
  ee:	00 97       	sbiw	r24, 0x00	; 0
  f0:	81 f5       	brne	.+96     	; 0x152 <_Z8disp_numj+0x6e>
	{
		disp_data(48);
  f2:	80 e3       	ldi	r24, 0x30	; 48
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
	}
	disp_cmd (0X04);
  fa:	84 e0       	ldi	r24, 0x04	; 4
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
 102:	22 c0       	rjmp	.+68     	; 0x148 <_Z8disp_numj+0x64>
	while (num!=0)
	{
		a=num % 10;
 104:	9e 01       	movw	r18, r28
 106:	ad ec       	ldi	r26, 0xCD	; 205
 108:	bc ec       	ldi	r27, 0xCC	; 204
 10a:	0e 94 46 02 	call	0x48c	; 0x48c <__umulhisi3>
 10e:	8c 01       	movw	r16, r24
 110:	16 95       	lsr	r17
 112:	07 95       	ror	r16
 114:	16 95       	lsr	r17
 116:	07 95       	ror	r16
 118:	16 95       	lsr	r17
 11a:	07 95       	ror	r16
 11c:	98 01       	movw	r18, r16
 11e:	22 0f       	add	r18, r18
 120:	33 1f       	adc	r19, r19
 122:	c8 01       	movw	r24, r16
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	82 0f       	add	r24, r18
 132:	93 1f       	adc	r25, r19
 134:	9e 01       	movw	r18, r28
 136:	28 1b       	sub	r18, r24
 138:	39 0b       	sbc	r19, r25
 13a:	c9 01       	movw	r24, r18
		disp_data(a+48);
 13c:	c0 96       	adiw	r24, 0x30	; 48
 13e:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
		num=num/10;
 142:	e8 01       	movw	r28, r16
	if (num==0)
	{
		disp_data(48);
	}
	disp_cmd (0X04);
	while (num!=0)
 144:	20 97       	sbiw	r28, 0x00	; 0
 146:	f1 f6       	brne	.-68     	; 0x104 <_Z8disp_numj+0x20>
	{
		a=num % 10;
		disp_data(a+48);
		num=num/10;
	}
	disp_cmd (0X06);
 148:	86 e0       	ldi	r24, 0x06	; 6
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
 150:	05 c0       	rjmp	.+10     	; 0x15c <_Z8disp_numj+0x78>
	int a=0;
	if (num==0)
	{
		disp_data(48);
	}
	disp_cmd (0X04);
 152:	84 e0       	ldi	r24, 0x04	; 4
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
 15a:	d4 cf       	rjmp	.-88     	; 0x104 <_Z8disp_numj+0x20>
		a=num % 10;
		disp_data(a+48);
		num=num/10;
	}
	disp_cmd (0X06);
}
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	1f 91       	pop	r17
 162:	0f 91       	pop	r16
 164:	08 95       	ret

00000166 <_Z8lcd_initv>:
void lcd_init()
{
	disp_cmd(0X02);
 166:	82 e0       	ldi	r24, 0x02	; 2
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
	disp_cmd(0X28);
 16e:	88 e2       	ldi	r24, 0x28	; 40
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
	disp_cmd(0X0C);
 176:	8c e0       	ldi	r24, 0x0C	; 12
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
	disp_cmd(0X06);
 17e:	86 e0       	ldi	r24, 0x06	; 6
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
 186:	08 95       	ret

00000188 <main>:
void disp_data(int cmd);
void disp_num(unsigned int num);
void disp_string(  char *str);
int main(void)
{
	DDRA=0X00;
 188:	1a ba       	out	0x1a, r1	; 26
	DDRB=0XFF;
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	87 bb       	out	0x17, r24	; 23
	PORTA=0XFF;
 18e:	8b bb       	out	0x1b, r24	; 27
	DDRC = 0XFF;
 190:	84 bb       	out	0x14, r24	; 20

	lcd_init();
 192:	0e 94 b3 00 	call	0x166	; 0x166 <_Z8lcd_initv>
	int i3=0;
	int i4=0;
	int i5=0;
	int i6=0;
	int i7=0;
	int i8=0;
 196:	a1 2c       	mov	r10, r1
 198:	b1 2c       	mov	r11, r1
	int i2=0;
	int i3=0;
	int i4=0;
	int i5=0;
	int i6=0;
	int i7=0;
 19a:	c1 2c       	mov	r12, r1
 19c:	d1 2c       	mov	r13, r1
	int i1=0;
	int i2=0;
	int i3=0;
	int i4=0;
	int i5=0;
	int i6=0;
 19e:	e1 2c       	mov	r14, r1
 1a0:	f1 2c       	mov	r15, r1
	
	int i1=0;
	int i2=0;
	int i3=0;
	int i4=0;
	int i5=0;
 1a2:	00 e0       	ldi	r16, 0x00	; 0
 1a4:	10 e0       	ldi	r17, 0x00	; 0
	lcd_init();
	
	int i1=0;
	int i2=0;
	int i3=0;
	int i4=0;
 1a6:	81 2c       	mov	r8, r1
 1a8:	91 2c       	mov	r9, r1

	lcd_init();
	
	int i1=0;
	int i2=0;
	int i3=0;
 1aa:	61 2c       	mov	r6, r1
 1ac:	71 2c       	mov	r7, r1
	DDRC = 0XFF;

	lcd_init();
	
	int i1=0;
	int i2=0;
 1ae:	41 2c       	mov	r4, r1
 1b0:	51 2c       	mov	r5, r1
	PORTA=0XFF;
	DDRC = 0XFF;

	lcd_init();
	
	int i1=0;
 1b2:	21 2c       	mov	r2, r1
 1b4:	31 2c       	mov	r3, r1
		 {
			 while (PINA==0XFE);
			 PORTB=(PORTB-0X01);//1
			 disp_cmd(0X80);
			 disp_data(' ');
			 i1=0;
 1b6:	c0 e0       	ldi	r28, 0x00	; 0
 1b8:	d0 e0       	ldi	r29, 0x00	; 0
	int i6=0;
	int i7=0;
	int i8=0;
	while (1)
	{
		if ((PINA==0b11111110) && (i1==0))
 1ba:	89 b3       	in	r24, 0x19	; 25
 1bc:	8e 3f       	cpi	r24, 0xFE	; 254
 1be:	a1 f4       	brne	.+40     	; 0x1e8 <main+0x60>
 1c0:	21 14       	cp	r2, r1
 1c2:	31 04       	cpc	r3, r1
 1c4:	89 f4       	brne	.+34     	; 0x1e8 <main+0x60>
		{
			while (PINA==0XFE);
 1c6:	89 b3       	in	r24, 0x19	; 25
 1c8:	8e 3f       	cpi	r24, 0xFE	; 254
 1ca:	e9 f3       	breq	.-6      	; 0x1c6 <main+0x3e>
			
			
			PORTB=(PORTB+0X01);//1
 1cc:	88 b3       	in	r24, 0x18	; 24
 1ce:	8f 5f       	subi	r24, 0xFF	; 255
 1d0:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X80);
 1d2:	80 e8       	ldi	r24, 0x80	; 128
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(1);
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i1=1;
 1e2:	22 24       	eor	r2, r2
 1e4:	23 94       	inc	r2
 1e6:	31 2c       	mov	r3, r1
		}
		
		 if ((PINA==0b11111101)  && (i2==0))
 1e8:	89 b3       	in	r24, 0x19	; 25
 1ea:	8d 3f       	cpi	r24, 0xFD	; 253
 1ec:	a1 f4       	brne	.+40     	; 0x216 <main+0x8e>
 1ee:	41 14       	cp	r4, r1
 1f0:	51 04       	cpc	r5, r1
 1f2:	89 f4       	brne	.+34     	; 0x216 <main+0x8e>
		{
			while (PINA==0XFD);
 1f4:	89 b3       	in	r24, 0x19	; 25
 1f6:	8d 3f       	cpi	r24, 0xFD	; 253
 1f8:	e9 f3       	breq	.-6      	; 0x1f4 <main+0x6c>
			PORTB=(PORTB+0X02);//2
 1fa:	88 b3       	in	r24, 0x18	; 24
 1fc:	8e 5f       	subi	r24, 0xFE	; 254
 1fe:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X81);
 200:	81 e8       	ldi	r24, 0x81	; 129
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(2);
 208:	82 e0       	ldi	r24, 0x02	; 2
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i2=1;
 210:	44 24       	eor	r4, r4
 212:	43 94       	inc	r4
 214:	51 2c       	mov	r5, r1
		}
		 if ((PINA==0b11111011)  && (i3==0))
 216:	89 b3       	in	r24, 0x19	; 25
 218:	8b 3f       	cpi	r24, 0xFB	; 251
 21a:	a1 f4       	brne	.+40     	; 0x244 <main+0xbc>
 21c:	61 14       	cp	r6, r1
 21e:	71 04       	cpc	r7, r1
 220:	89 f4       	brne	.+34     	; 0x244 <main+0xbc>
		{
			while (PINA==0XFB);
 222:	89 b3       	in	r24, 0x19	; 25
 224:	8b 3f       	cpi	r24, 0xFB	; 251
 226:	e9 f3       	breq	.-6      	; 0x222 <main+0x9a>
			PORTB=(PORTB+0X04);//3
 228:	88 b3       	in	r24, 0x18	; 24
 22a:	8c 5f       	subi	r24, 0xFC	; 252
 22c:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X82);
 22e:	82 e8       	ldi	r24, 0x82	; 130
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(3);
 236:	83 e0       	ldi	r24, 0x03	; 3
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i3=1;
 23e:	66 24       	eor	r6, r6
 240:	63 94       	inc	r6
 242:	71 2c       	mov	r7, r1
		}
		 if ((PINA==0b11110111) && (i4==0))
 244:	89 b3       	in	r24, 0x19	; 25
 246:	87 3f       	cpi	r24, 0xF7	; 247
 248:	a1 f4       	brne	.+40     	; 0x272 <main+0xea>
 24a:	81 14       	cp	r8, r1
 24c:	91 04       	cpc	r9, r1
 24e:	89 f4       	brne	.+34     	; 0x272 <main+0xea>
		{
			while (PINA==0XF7);
 250:	89 b3       	in	r24, 0x19	; 25
 252:	87 3f       	cpi	r24, 0xF7	; 247
 254:	e9 f3       	breq	.-6      	; 0x250 <main+0xc8>
			PORTB=(PORTB+0X08);//4
 256:	88 b3       	in	r24, 0x18	; 24
 258:	88 5f       	subi	r24, 0xF8	; 248
 25a:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X83);
 25c:	83 e8       	ldi	r24, 0x83	; 131
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(4);
 264:	84 e0       	ldi	r24, 0x04	; 4
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i4=1;
 26c:	88 24       	eor	r8, r8
 26e:	83 94       	inc	r8
 270:	91 2c       	mov	r9, r1
		}
		 if ((PINA==0b11101111) && (i5==0))
 272:	89 b3       	in	r24, 0x19	; 25
 274:	8f 3e       	cpi	r24, 0xEF	; 239
 276:	99 f4       	brne	.+38     	; 0x29e <main+0x116>
 278:	01 15       	cp	r16, r1
 27a:	11 05       	cpc	r17, r1
 27c:	81 f4       	brne	.+32     	; 0x29e <main+0x116>
		{
			while (PINA==0XEF);
 27e:	89 b3       	in	r24, 0x19	; 25
 280:	8f 3e       	cpi	r24, 0xEF	; 239
 282:	e9 f3       	breq	.-6      	; 0x27e <main+0xf6>
			PORTB=(PORTB+0X10);//5
 284:	88 b3       	in	r24, 0x18	; 24
 286:	80 5f       	subi	r24, 0xF0	; 240
 288:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X84);
 28a:	84 e8       	ldi	r24, 0x84	; 132
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(5);
 292:	85 e0       	ldi	r24, 0x05	; 5
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i5=1;
 29a:	01 e0       	ldi	r16, 0x01	; 1
 29c:	10 e0       	ldi	r17, 0x00	; 0
		}
		 if ((PINA==0b11011111)  && (i6==0))
 29e:	89 b3       	in	r24, 0x19	; 25
 2a0:	8f 3d       	cpi	r24, 0xDF	; 223
 2a2:	a1 f4       	brne	.+40     	; 0x2cc <main+0x144>
 2a4:	e1 14       	cp	r14, r1
 2a6:	f1 04       	cpc	r15, r1
 2a8:	89 f4       	brne	.+34     	; 0x2cc <main+0x144>
		{
			while (PINA==0XDF);
 2aa:	89 b3       	in	r24, 0x19	; 25
 2ac:	8f 3d       	cpi	r24, 0xDF	; 223
 2ae:	e9 f3       	breq	.-6      	; 0x2aa <main+0x122>
			PORTB=(PORTB+0X20);//6
 2b0:	88 b3       	in	r24, 0x18	; 24
 2b2:	80 5e       	subi	r24, 0xE0	; 224
 2b4:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X85);
 2b6:	85 e8       	ldi	r24, 0x85	; 133
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(6);
 2be:	86 e0       	ldi	r24, 0x06	; 6
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i6=1;
 2c6:	ee 24       	eor	r14, r14
 2c8:	e3 94       	inc	r14
 2ca:	f1 2c       	mov	r15, r1
		}
		 if ((PINA==0b10111111)  && (i7==0))
 2cc:	89 b3       	in	r24, 0x19	; 25
 2ce:	8f 3b       	cpi	r24, 0xBF	; 191
 2d0:	a1 f4       	brne	.+40     	; 0x2fa <main+0x172>
 2d2:	c1 14       	cp	r12, r1
 2d4:	d1 04       	cpc	r13, r1
 2d6:	89 f4       	brne	.+34     	; 0x2fa <main+0x172>
		{
			while (PINA==0XBF);
 2d8:	89 b3       	in	r24, 0x19	; 25
 2da:	8f 3b       	cpi	r24, 0xBF	; 191
 2dc:	e9 f3       	breq	.-6      	; 0x2d8 <main+0x150>
			PORTB=(PORTB+0X40);//7
 2de:	88 b3       	in	r24, 0x18	; 24
 2e0:	80 5c       	subi	r24, 0xC0	; 192
 2e2:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X86);
 2e4:	86 e8       	ldi	r24, 0x86	; 134
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(7);
 2ec:	87 e0       	ldi	r24, 0x07	; 7
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i7=1;
 2f4:	cc 24       	eor	r12, r12
 2f6:	c3 94       	inc	r12
 2f8:	d1 2c       	mov	r13, r1
		}			
		 if ((PINA==0b01111111)  && (i8==0))
 2fa:	89 b3       	in	r24, 0x19	; 25
 2fc:	8f 37       	cpi	r24, 0x7F	; 127
 2fe:	a1 f4       	brne	.+40     	; 0x328 <main+0x1a0>
 300:	a1 14       	cp	r10, r1
 302:	b1 04       	cpc	r11, r1
 304:	89 f4       	brne	.+34     	; 0x328 <main+0x1a0>
		{
			while (PINA==0X7F);
 306:	89 b3       	in	r24, 0x19	; 25
 308:	8f 37       	cpi	r24, 0x7F	; 127
 30a:	e9 f3       	breq	.-6      	; 0x306 <main+0x17e>
			PORTB=(PORTB+0X80);//8
 30c:	88 b3       	in	r24, 0x18	; 24
 30e:	80 58       	subi	r24, 0x80	; 128
 310:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X87);
 312:	87 e8       	ldi	r24, 0x87	; 135
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(8);
 31a:	88 e0       	ldi	r24, 0x08	; 8
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
			i8=1;
 322:	aa 24       	eor	r10, r10
 324:	a3 94       	inc	r10
 326:	b1 2c       	mov	r11, r1
		}
		 if ((PINA==0XFE)  && (i1==1))
 328:	89 b3       	in	r24, 0x19	; 25
 32a:	8e 3f       	cpi	r24, 0xFE	; 254
 32c:	99 f4       	brne	.+38     	; 0x354 <main+0x1cc>
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	28 16       	cp	r2, r24
 332:	31 04       	cpc	r3, r1
 334:	79 f4       	brne	.+30     	; 0x354 <main+0x1cc>
		 {
			 while (PINA==0XFE);
 336:	89 b3       	in	r24, 0x19	; 25
 338:	8e 3f       	cpi	r24, 0xFE	; 254
 33a:	e9 f3       	breq	.-6      	; 0x336 <main+0x1ae>
			 PORTB=(PORTB-0X01);//1
 33c:	88 b3       	in	r24, 0x18	; 24
 33e:	81 50       	subi	r24, 0x01	; 1
 340:	88 bb       	out	0x18, r24	; 24
			 disp_cmd(0X80);
 342:	80 e8       	ldi	r24, 0x80	; 128
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			 disp_data(' ');
 34a:	80 e2       	ldi	r24, 0x20	; 32
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
			 i1=0;
 352:	1e 01       	movw	r2, r28
		 }

		 if ((PINA==0XFD) && (i2==1))
 354:	89 b3       	in	r24, 0x19	; 25
 356:	8d 3f       	cpi	r24, 0xFD	; 253
 358:	99 f4       	brne	.+38     	; 0x380 <main+0x1f8>
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	48 16       	cp	r4, r24
 35e:	51 04       	cpc	r5, r1
 360:	79 f4       	brne	.+30     	; 0x380 <main+0x1f8>
		{
			while (PINA==0XFD);
 362:	89 b3       	in	r24, 0x19	; 25
 364:	8d 3f       	cpi	r24, 0xFD	; 253
 366:	e9 f3       	breq	.-6      	; 0x362 <main+0x1da>
			PORTB=(PORTB-0X02);//2
 368:	88 b3       	in	r24, 0x18	; 24
 36a:	82 50       	subi	r24, 0x02	; 2
 36c:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X81);
 36e:	81 e8       	ldi	r24, 0x81	; 129
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_data(' ');
 376:	80 e2       	ldi	r24, 0x20	; 32
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
			i2=0;
 37e:	2e 01       	movw	r4, r28
		}
		 if ((PINA==0XFB) && (i3==1))
 380:	89 b3       	in	r24, 0x19	; 25
 382:	8b 3f       	cpi	r24, 0xFB	; 251
 384:	99 f4       	brne	.+38     	; 0x3ac <main+0x224>
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	68 16       	cp	r6, r24
 38a:	71 04       	cpc	r7, r1
 38c:	79 f4       	brne	.+30     	; 0x3ac <main+0x224>
		{
			while (PINA==0XFB);
 38e:	89 b3       	in	r24, 0x19	; 25
 390:	8b 3f       	cpi	r24, 0xFB	; 251
 392:	e9 f3       	breq	.-6      	; 0x38e <main+0x206>
			PORTB=(PORTB-0X04);//3
 394:	88 b3       	in	r24, 0x18	; 24
 396:	84 50       	subi	r24, 0x04	; 4
 398:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X82);
 39a:	82 e8       	ldi	r24, 0x82	; 130
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_data(' ');
 3a2:	80 e2       	ldi	r24, 0x20	; 32
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
		i3=0;
 3aa:	3e 01       	movw	r6, r28
		}
		if ((PINA==0XF7) && (i4==1))
 3ac:	89 b3       	in	r24, 0x19	; 25
 3ae:	87 3f       	cpi	r24, 0xF7	; 247
 3b0:	99 f4       	brne	.+38     	; 0x3d8 <main+0x250>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	88 16       	cp	r8, r24
 3b6:	91 04       	cpc	r9, r1
 3b8:	79 f4       	brne	.+30     	; 0x3d8 <main+0x250>
		{
			while (PINA==0XF7);
 3ba:	89 b3       	in	r24, 0x19	; 25
 3bc:	87 3f       	cpi	r24, 0xF7	; 247
 3be:	e9 f3       	breq	.-6      	; 0x3ba <main+0x232>
			PORTB=(PORTB-0X08);//4
 3c0:	88 b3       	in	r24, 0x18	; 24
 3c2:	88 50       	subi	r24, 0x08	; 8
 3c4:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X83);
 3c6:	83 e8       	ldi	r24, 0x83	; 131
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_data(' ');
 3ce:	80 e2       	ldi	r24, 0x20	; 32
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
		i4=0;
 3d6:	4e 01       	movw	r8, r28
		}
		 if ((PINA==0XEF) && (i5==1))
 3d8:	89 b3       	in	r24, 0x19	; 25
 3da:	8f 3e       	cpi	r24, 0xEF	; 239
 3dc:	91 f4       	brne	.+36     	; 0x402 <main+0x27a>
 3de:	01 30       	cpi	r16, 0x01	; 1
 3e0:	11 05       	cpc	r17, r1
 3e2:	79 f4       	brne	.+30     	; 0x402 <main+0x27a>
		{
			while (PINA==0XEF);
 3e4:	89 b3       	in	r24, 0x19	; 25
 3e6:	8f 3e       	cpi	r24, 0xEF	; 239
 3e8:	e9 f3       	breq	.-6      	; 0x3e4 <main+0x25c>
			PORTB=(PORTB-0X10);//5
 3ea:	88 b3       	in	r24, 0x18	; 24
 3ec:	80 51       	subi	r24, 0x10	; 16
 3ee:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X84);
 3f0:	84 e8       	ldi	r24, 0x84	; 132
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_data(' ');
 3f8:	80 e2       	ldi	r24, 0x20	; 32
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
			i5=0;
 400:	8e 01       	movw	r16, r28
		}
		 if ((PINA==0XDF) && (i6==1)) 
 402:	89 b3       	in	r24, 0x19	; 25
 404:	8f 3d       	cpi	r24, 0xDF	; 223
 406:	99 f4       	brne	.+38     	; 0x42e <main+0x2a6>
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	e8 16       	cp	r14, r24
 40c:	f1 04       	cpc	r15, r1
 40e:	79 f4       	brne	.+30     	; 0x42e <main+0x2a6>
		{
			while (PINA==0XDF);
 410:	89 b3       	in	r24, 0x19	; 25
 412:	8f 3d       	cpi	r24, 0xDF	; 223
 414:	e9 f3       	breq	.-6      	; 0x410 <main+0x288>
			PORTB=(PORTB-0X20);//6
 416:	88 b3       	in	r24, 0x18	; 24
 418:	80 52       	subi	r24, 0x20	; 32
 41a:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X85);
 41c:	85 e8       	ldi	r24, 0x85	; 133
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_data(' ');
 424:	80 e2       	ldi	r24, 0x20	; 32
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
			i6=0;
 42c:	7e 01       	movw	r14, r28
		}
		 if ((PINA==0XBF) && (i7==1))
 42e:	89 b3       	in	r24, 0x19	; 25
 430:	8f 3b       	cpi	r24, 0xBF	; 191
 432:	99 f4       	brne	.+38     	; 0x45a <main+0x2d2>
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	c8 16       	cp	r12, r24
 438:	d1 04       	cpc	r13, r1
 43a:	79 f4       	brne	.+30     	; 0x45a <main+0x2d2>
		{
			while (PINA==0XBF);
 43c:	89 b3       	in	r24, 0x19	; 25
 43e:	8f 3b       	cpi	r24, 0xBF	; 191
 440:	e9 f3       	breq	.-6      	; 0x43c <main+0x2b4>
			PORTB=(PORTB-0X40);//7
 442:	88 b3       	in	r24, 0x18	; 24
 444:	80 54       	subi	r24, 0x40	; 64
 446:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X86);
 448:	86 e8       	ldi	r24, 0x86	; 134
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_data(' ');
 450:	80 e2       	ldi	r24, 0x20	; 32
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
			i7=0;
 458:	6e 01       	movw	r12, r28
		}
		
		 if ((PINA==0X7F) &&(i8==1))
 45a:	89 b3       	in	r24, 0x19	; 25
 45c:	8f 37       	cpi	r24, 0x7F	; 127
 45e:	09 f0       	breq	.+2      	; 0x462 <__stack+0x3>
 460:	ac ce       	rjmp	.-680    	; 0x1ba <main+0x32>
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	a8 16       	cp	r10, r24
 466:	b1 04       	cpc	r11, r1
 468:	09 f0       	breq	.+2      	; 0x46c <__stack+0xd>
 46a:	a7 ce       	rjmp	.-690    	; 0x1ba <main+0x32>
		{
			while (PINA==0X7F);
 46c:	89 b3       	in	r24, 0x19	; 25
 46e:	8f 37       	cpi	r24, 0x7F	; 127
 470:	e9 f3       	breq	.-6      	; 0x46c <__stack+0xd>
			PORTB=(PORTB-0X80);//8
 472:	88 b3       	in	r24, 0x18	; 24
 474:	80 58       	subi	r24, 0x80	; 128
 476:	88 bb       	out	0x18, r24	; 24
			disp_cmd(0X87);
 478:	87 e8       	ldi	r24, 0x87	; 135
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_data(' ');
 480:	80 e2       	ldi	r24, 0x20	; 32
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
			i8=0;
 488:	5e 01       	movw	r10, r28
 48a:	97 ce       	rjmp	.-722    	; 0x1ba <main+0x32>

0000048c <__umulhisi3>:
 48c:	a2 9f       	mul	r26, r18
 48e:	b0 01       	movw	r22, r0
 490:	b3 9f       	mul	r27, r19
 492:	c0 01       	movw	r24, r0
 494:	a3 9f       	mul	r26, r19
 496:	01 d0       	rcall	.+2      	; 0x49a <__umulhisi3+0xe>
 498:	b2 9f       	mul	r27, r18
 49a:	70 0d       	add	r23, r0
 49c:	81 1d       	adc	r24, r1
 49e:	11 24       	eor	r1, r1
 4a0:	91 1d       	adc	r25, r1
 4a2:	08 95       	ret

000004a4 <_exit>:
 4a4:	f8 94       	cli

000004a6 <__stop_program>:
 4a6:	ff cf       	rjmp	.-2      	; 0x4a6 <__stop_program>
